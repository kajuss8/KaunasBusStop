// <auto-generated />
using System;
using KaunasBusStop.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KaunasBusStop.Server.Migrations
{
    [DbContext(typeof(BusStopDbContext))]
    [Migration("20250502122658_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KaunasBusStop.Server.Models.Calendar", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("Friday")
                        .HasColumnType("int");

                    b.Property<int?>("Monday")
                        .HasColumnType("int");

                    b.Property<int?>("Saturday")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("Sunday")
                        .HasColumnType("int");

                    b.Property<int?>("Thursday")
                        .HasColumnType("int");

                    b.Property<int?>("Tuesday")
                        .HasColumnType("int");

                    b.Property<int?>("Wednesday")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("KaunasBusStop.Server.Models.Route", b =>
                {
                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RouteColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteShorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RouteSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("RouteText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RouteType")
                        .HasColumnType("int");

                    b.Property<string>("RouteURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("KaunasBusStop.Server.Models.RouteWorkWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Friday")
                        .HasColumnType("int");

                    b.Property<int?>("Monday")
                        .HasColumnType("int");

                    b.Property<string>("RouteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteShorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RouteSortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("RouteType")
                        .HasColumnType("int");

                    b.Property<int?>("Saturday")
                        .HasColumnType("int");

                    b.Property<int?>("Sunday")
                        .HasColumnType("int");

                    b.Property<int?>("Thursday")
                        .HasColumnType("int");

                    b.Property<int?>("Tuesday")
                        .HasColumnType("int");

                    b.Property<int?>("Wednesday")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoutesWorkWeeks");
                });

            modelBuilder.Entity("KaunasBusStop.Server.Models.Stop", b =>
                {
                    b.Property<int>("StopId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationType")
                        .HasColumnType("int");

                    b.Property<int?>("ParentStation")
                        .HasColumnType("int");

                    b.Property<string>("StopCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("StopLat")
                        .HasColumnType("real");

                    b.Property<float?>("StopLon")
                        .HasColumnType("real");

                    b.Property<string>("StopName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StopId");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("KaunasBusStop.Server.Models.StopTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArrivalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DropOffType")
                        .HasColumnType("int");

                    b.Property<int?>("PickUpType")
                        .HasColumnType("int");

                    b.Property<int?>("StopId")
                        .HasColumnType("int");

                    b.Property<int?>("StopSequence")
                        .HasColumnType("int");

                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StopTimes");
                });

            modelBuilder.Entity("KaunasBusStop.Server.Models.Trip", b =>
                {
                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BlockId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ShapeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripHeadsign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WheelchairAccessible")
                        .HasColumnType("int");

                    b.HasKey("TripId");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
